type Query {
    listOrderLine(orderId:String): [OrderLineDtoOut]
}
type Mutation {
    placeOrder(orderDto:OrderDtoIn!): OrderDtoOut
}

input OrderDtoIn {
    orderLineSet: [OrderLineDtoIn]!
}

input OrderLineDtoIn {
    beerId: String
    orderQuantity: Int
    quantityAllocated: Int
}

type OrderDtoOut {
    id: ID
    orderLineSet: [OrderLineDtoOut]
    status: OrderStatus
}

type OrderLineDtoOut {
    beerId: String
    orderQuantity: Int
    quantityAllocated: Int
}

enum OrderStatus {
    NEW, CANCELLED, PENDING_VALIDATION, VALIDATED, VALIDATION_EXCEPTION, PENDING_ALLOCATION, ALLOCATED,
        ALLOCATION_ERROR, PENDING_INVENTORY, PICKED_UP, DELIVERED, DELIVERY_EXCEPTION
}