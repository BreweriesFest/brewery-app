spring:
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
#      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
  application:
    name: beer-service
  data.mongodb:
    host: localhost
    port: 27017
    #    uri: "mongodb://username:password@localhost:27017/?authSource=admin&minPoolSize=5"
    authentication-database: admin
    username: username
    password: password
    database: brewery
  profiles:
    include:
      - common
    active:
      - mongo-reactive
      - inventory-client-service
server:
  port: ${DEFAULT__APP__PORT:8080}
features:
  redis:
    enabled: true
spring.kafka.bootstrap-servers: 'localhost:9092'
app:
  kafka:
    beer:
      producer:
        bootstrapServers: ${KAFKA_INVENTORY_PRODUCER_BOOTSTRAP_SERVER:${spring.kafka.bootstrap-servers}}
        topic: ${KAFKA_INVENTORY_PRODUCER_TOPIC:brewery-brew-event}
        idempotence: ${KAFKA_PRODUCER_IDEMPOTENCE:true}
      consumer:
        bootstrapServers: ${KAFKA_INVENTORY_CONSUMER_BOOTSTRAP_SERVER:${spring.kafka.bootstrap-servers}}
        topic: ${KAFKA_INVENTORY_CONSUMER_TOPIC:check-inventory-event}
        consumerGroup: ${KAFKA_INVENTORY_CONSUMER_GROUP:beer-consumer}