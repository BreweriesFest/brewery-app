spring:
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
  #      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
  application:
    name: beer-service
  data.mongodb:
    host: ${MONGO_HOST:localhost}
    port: ${MONGO_PORT:27017}
    #    uri: "mongodb://username:password@localhost:27017/?authSource=admin&minPoolSize=5"
    authentication-database: ${MONGO_AUTH_DATABASE:admin}
    username: ${MONGO_USERNAME:username}
    password: ${MONGO_PASSWORD:password}
    database: ${MONGO_DATABASE:brewery}
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    timeout: ${REDIS_TIMEOUT:60000}
  profiles:
    include:
      - common
    active:
      - mongo-reactive
      - inventory-client-service
server:
  port: ${DEFAULT__APP__PORT:8080}
features:
  cache:
    enabled: ${CACHING_ENABLED:true}
spring.kafka.bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
app:
  kafka:
    beer:
      producer:
        bootstrapServers: ${spring.kafka.bootstrap-servers}
        topic: ${KAFKA_INVENTORY_PRODUCER_TOPIC:brewery-brew-event}
        idempotence: ${KAFKA_PRODUCER_IDEMPOTENCE:true}
      consumer:
        bootstrapServers: ${spring.kafka.bootstrap-servers}
        topic: ${KAFKA_INVENTORY_CONSUMER_TOPIC:check-inventory-event}
        consumerGroup: ${KAFKA_INVENTORY_CONSUMER_GROUP:beer-consumer}